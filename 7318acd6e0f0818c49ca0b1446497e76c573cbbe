{
  "comments": [
    {
      "key": {
        "uuid": "0d8e0bb3_5d2c9b07",
        "filename": "BUILD",
        "patchSetId": 17
      },
      "lineNbr": 17,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-08T18:03:41Z",
      "side": 1,
      "message": "Remove this.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 34
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_746b2808",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestModule.java",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "What is this message supposed to do?\n(debugging/development leftover or some sort of informative thing for users, if the latter, maybe \"SuperManifestModule start\" to differ from other plugins?)",
      "range": {
        "startLine": 26,
        "startChar": 24,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_357d501f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestModule.java",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-15T13:03:55Z",
      "side": 1,
      "message": "debug.",
      "parentUuid": "ed6ff7a9_746b2808",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_b49dc0f8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 55,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "As this is just a plugin, do you intend to come up with your own coding style or loosely follow Gerrit? (that has a line limit of 80)",
      "range": {
        "startLine": 55,
        "startChar": 76,
        "endLine": 55,
        "endChar": 96
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa132f0f_347d501f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 55,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-15T13:03:55Z",
      "side": 1,
      "message": "google-java-format.",
      "parentUuid": "ed6ff7a9_b49dc0f8",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_d4923ce7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 71,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "In Gerrit the logger usually goes as the very first variable in a class. (statics go first, and the logger goes firster ;)",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 71,
        "endChar": 91
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_f49738d4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "This hints at bad UI design.\n\nSo when setting one option to a specific value, it influences the behavior of another (it\u0027s ignored).\n\nI think a better design would be to have a refspec for the src/dst branch as that is one setting only without weird cross influences.\n\nAnd on that one setting it is easy to detect what is valid or invalid both for humans as well as machines. A valid refspec is either \"refs/heads/onebranch:refs/heads/onematch\" or \"refs/heads/*:refs/heads*\".\n\nThis plugin needs just regular Git refspecs and that is what people are familar with, so I\u0027d suggest to go with such a UI design as it is easier to use (less overhead for people to remember and less for you to document).\n\nSo if I were to design the config it would rather be\n\n    [superproject \"platforms/manifest\"]\n        targetRepo \u003d \"submodules\"\n        refmatch \u003d refs/heads/nyc:refs/heads/nyc\n\n        srcPath \u003d manifest.xml [optional]\n        putLabelsAsGroups \u003d true [optional]\n        useShallow \u003d true [optional]\n        copySection \u003d true [optional]\n        linkSections \u003d true [optional]\n        onError \u003d {silentlyLogged, pageOncall} [just kidding]",
      "range": {
        "startLine": 112,
        "startChar": 3,
        "endLine": 112,
        "endChar": 61
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_55844cf4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-15T13:03:55Z",
      "side": 1,
      "message": "you\u0027re commenting on the internal representation which isn\u0027t necessarily the external one.\n\nfor your proposal, I have two issues:\n\n1) you name the config entry by its source. However, the problem space is such that one source may go into multiple targets, but a target (repository, branch) tuple is unique. So I think the config entries should be named by their targets.\n\n2) your suggestion to use refspecs in the configuration section implies that you can never have a configuration where two branches from one side go (eg. XML) into two different repositories on the other one (eg superproject).",
      "parentUuid": "ed6ff7a9_f49738d4",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fac16fc3_247d321f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-15T17:10:20Z",
      "side": 1,
      "message": "1) Oh, right. \n2) With 1) you could have different refspecs in each target for the same source.",
      "parentUuid": "1a1ba32a_55844cf4",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_b5ba00a2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-15T17:18:44Z",
      "side": 1,
      "message": "I don\u0027t understand you; can you give an example of how to configure\n\n manifestrepo1 , branch1 \u003d\u003e superproject1 , branch1\n manifestrepo1 , branch2 \u003d\u003e superproject2 , branch2\n manifestrepo2 , branch1 \u003d\u003e superproject2 , branch1\n manifestrepo2 , branch2 \u003d\u003e superproject1 , branch2\n\nusing the mechanism you want?\n\nif this is too general, what is a good assumption to make on how data flows?",
      "parentUuid": "fac16fc3_247d321f",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fac16fc3_649e0a3f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-15T18:08:37Z",
      "side": 1,
      "message": "Oh I see my problem. I assumed this problem was very closely related to regular superproject updates, in which you would have in the submodule (which is similar to the XML manifest in this case):\n\n    submodule1,refs/meta/config,project.config:\n    [allowSuperproject \"superproject1\"]\n        all \u003d refs/heads/branch1:refs/heads/branch1\n    [allowSuperproject \"superproject2\"]\n        all \u003d refs/heads/branch2:refs/heads/branch2\n\n    submodule2,refs/meta/config,project.config:\n    [allowSuperproject \"superproject2\"]\n        all \u003d refs/heads/branch1:refs/heads/branch1\n    [allowSuperproject \"superproject1\"]\n        all \u003d refs/heads/branch2:refs/heads/branch2\n\nto allow the subscriptions (which is just optional and tightening the security aspect; you could allow everything here) and on the superproject side in the .gitmodules:\n\n    superproject1,branch1,.gitmodules\n    [submodule \"submodule1\"]\n        branch \u003d branch1\n\n    superproject1,branch2,.gitmodules\n    [submodule \"submodule2\"]\n        branch \u003d branch2\n\n    superproject2,branch1,.gitmodules\n    [submodule \"submodule2\"]\n        branch \u003d branch1\n\n    superproject2,branch2,.gitmodules\n    [submodule \"submodule1\"]\n        branch \u003d branch2\n\nThis scheme cannot be easily transferred to this plugin, because the configuration is not in target-branch specific files (.gitmodules), but in All-Projects, which is why currently the target-branch needs to be encoded in the section for keys.\n\nSo if we were to come up with a target specific branch outside the branch itself (and Gerrit specific), this could be:\n\n    superproject1,refs/meta/refs/heads/branch1,manifestupdate.config\n    [updateFromManifest \"manifestrepo1\"]\n        refspec \u003d refs/heads/branch1:refs/heads/branch1\n\n    superproject1,refs/meta/refs/heads/branch2,manifestupdate.config\n    [updateFromManifest \"manifestrepo2\"]\n        refspec \u003d refs/heads/branch2:refs/heads/branch2\n\n    superproject2,refs/meta/refs/heads/branch1,manifestupdate.config\n    [updateFromManifest \"manifestrepo2\"]\n        refspec \u003d refs/heads/branch1:refs/heads/branch1\n\n    superproject2,refs/meta/refs/heads/branch2,manifestupdate.config\n    [updateFromManifest \"manifestrepo1\"]\n        refspec \u003d refs/heads/branch2:refs/heads/branch2\n\n\nWhile the individual configuration seems very expressive and clear to me, I think having these specific config branches \"refs/meta/refs/heads/branch1\" is a pain, though\nas it spreads the config across a lot of branches and files. And as you only have one source branch anyway for the conversion from manifests (unlike submodules where you have many submodules to one superproject), the config files will stay as short.\n\nSo your original proposal to put it at a central place via\n\n    all in one config file:\n    [updateFromManifest \"superproject2,branch2\"]\n        src \u003d manifestrepo1,branch2\n    [updateFromManifest \"superproject2,branch1\"]\n        src \u003d manifestrepo2,branch1\n    [updateFromManifest \"superproject1,branch2\"]\n        src \u003d manifestrepo2,branch2\n    [updateFromManifest \"superproject1,branch1\"]\n        src \u003d manifestrepo1,branch1\n\nseems a good idea to me. Well you split up the srcRepo and srcBranch into 2 keys, I just aligned it into one value, because then it looks similar to the destination specification.\n\nSo your design is sound, sorry for the noise.",
      "parentUuid": "1a1ba32a_b5ba00a2",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a699be3_3778182f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 313,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-12-09T07:17:54Z",
      "side": 1,
      "message": "Have you check that this is actually needed?\n\nReceiveCommits already evicts the project from the cache when refs/meta/config is updated by push [1] and SubmitStrategyOp does the same when something is submitted to refs/meta/config [2].\n\n[1] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java#647\n\n[2] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/gerrit-server/src/main/java/com/google/gerrit/server/git/strategy/SubmitStrategyOp.java#486",
      "range": {
        "startLine": 312,
        "startChar": 7,
        "endLine": 313,
        "endChar": 44
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed9617c8_3c1fd1d4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 17
      },
      "lineNbr": 36,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-08T18:03:41Z",
      "side": 1,
      "message": "LightweightPluginDaemonTest, if you want the @TestPlugin to be considered.",
      "range": {
        "startLine": 36,
        "startChar": 37,
        "endLine": 36,
        "endChar": 53
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed9617c8_5c2c9d07",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 17
      },
      "lineNbr": 36,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-08T18:13:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed9617c8_3c1fd1d4",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}