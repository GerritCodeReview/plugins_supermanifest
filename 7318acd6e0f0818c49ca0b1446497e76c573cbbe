{
  "comments": [
    {
      "key": {
        "uuid": "0d8e0bb3_5d2c9b07",
        "filename": "BUILD",
        "patchSetId": 17
      },
      "lineNbr": 17,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-08T18:03:41Z",
      "side": 1,
      "message": "Remove this.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 34
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_746b2808",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestModule.java",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "What is this message supposed to do?\n(debugging/development leftover or some sort of informative thing for users, if the latter, maybe \"SuperManifestModule start\" to differ from other plugins?)",
      "range": {
        "startLine": 26,
        "startChar": 24,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_357d501f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestModule.java",
        "patchSetId": 17
      },
      "lineNbr": 26,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-15T13:03:55Z",
      "side": 1,
      "message": "debug.",
      "parentUuid": "ed6ff7a9_746b2808",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_b49dc0f8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 55,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "As this is just a plugin, do you intend to come up with your own coding style or loosely follow Gerrit? (that has a line limit of 80)",
      "range": {
        "startLine": 55,
        "startChar": 76,
        "endLine": 55,
        "endChar": 96
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa132f0f_347d501f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 55,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-15T13:03:55Z",
      "side": 1,
      "message": "google-java-format.",
      "parentUuid": "ed6ff7a9_b49dc0f8",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_d4923ce7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 71,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "In Gerrit the logger usually goes as the very first variable in a class. (statics go first, and the logger goes firster ;)",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 71,
        "endChar": 91
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed6ff7a9_f49738d4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-09T18:16:22Z",
      "side": 1,
      "message": "This hints at bad UI design.\n\nSo when setting one option to a specific value, it influences the behavior of another (it\u0027s ignored).\n\nI think a better design would be to have a refspec for the src/dst branch as that is one setting only without weird cross influences.\n\nAnd on that one setting it is easy to detect what is valid or invalid both for humans as well as machines. A valid refspec is either \"refs/heads/onebranch:refs/heads/onematch\" or \"refs/heads/*:refs/heads*\".\n\nThis plugin needs just regular Git refspecs and that is what people are familar with, so I\u0027d suggest to go with such a UI design as it is easier to use (less overhead for people to remember and less for you to document).\n\nSo if I were to design the config it would rather be\n\n    [superproject \"platforms/manifest\"]\n        targetRepo \u003d \"submodules\"\n        refmatch \u003d refs/heads/nyc:refs/heads/nyc\n\n        srcPath \u003d manifest.xml [optional]\n        putLabelsAsGroups \u003d true [optional]\n        useShallow \u003d true [optional]\n        copySection \u003d true [optional]\n        linkSections \u003d true [optional]\n        onError \u003d {silentlyLogged, pageOncall} [just kidding]",
      "range": {
        "startLine": 112,
        "startChar": 3,
        "endLine": 112,
        "endChar": 61
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a1ba32a_55844cf4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-15T13:03:55Z",
      "side": 1,
      "message": "you\u0027re commenting on the internal representation which isn\u0027t necessarily the external one.\n\nfor your proposal, I have two issues:\n\n1) you name the config entry by its source. However, the problem space is such that one source may go into multiple targets, but a target (repository, branch) tuple is unique. So I think the config entries should be named by their targets.\n\n2) your suggestion to use refspecs in the configuration section implies that you can never have a configuration where two branches from one side go (eg. XML) into two different repositories on the other one (eg superproject).",
      "parentUuid": "ed6ff7a9_f49738d4",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fac16fc3_247d321f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 112,
      "author": {
        "id": 1017837
      },
      "writtenOn": "2016-12-15T17:10:20Z",
      "side": 1,
      "message": "1) Oh, right. \n2) With 1) you could have different refspecs in each target for the same source.",
      "parentUuid": "1a1ba32a_55844cf4",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a699be3_3778182f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 17
      },
      "lineNbr": 313,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2016-12-09T07:17:54Z",
      "side": 1,
      "message": "Have you check that this is actually needed?\n\nReceiveCommits already evicts the project from the cache when refs/meta/config is updated by push [1] and SubmitStrategyOp does the same when something is submitted to refs/meta/config [2].\n\n[1] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/gerrit-server/src/main/java/com/google/gerrit/server/git/ReceiveCommits.java#647\n\n[2] https://gerrit.googlesource.com/gerrit/+/refs/heads/master/gerrit-server/src/main/java/com/google/gerrit/server/git/strategy/SubmitStrategyOp.java#486",
      "range": {
        "startLine": 312,
        "startChar": 7,
        "endLine": 313,
        "endChar": 44
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed9617c8_3c1fd1d4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 17
      },
      "lineNbr": 36,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2016-12-08T18:03:41Z",
      "side": 1,
      "message": "LightweightPluginDaemonTest, if you want the @TestPlugin to be considered.",
      "range": {
        "startLine": 36,
        "startChar": 37,
        "endLine": 36,
        "endChar": 53
      },
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed9617c8_5c2c9d07",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 17
      },
      "lineNbr": 36,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2016-12-08T18:13:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed9617c8_3c1fd1d4",
      "revId": "7318acd6e0f0818c49ca0b1446497e76c573cbbe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}