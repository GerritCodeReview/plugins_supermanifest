{
  "comments": [
    {
      "key": {
        "uuid": "b8fa31ac_12d4d2c3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T14:20:12Z",
      "side": 1,
      "message": "canonicalWebUri",
      "range": {
        "startLine": 74,
        "startChar": 20,
        "endLine": 74,
        "endChar": 35
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc6890d5_368a2961",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T15:06:58Z",
      "side": 1,
      "message": "Gerrit is calling this the CanonicalWebUrl (see the inject statement below).",
      "parentUuid": "b8fa31ac_12d4d2c3",
      "range": {
        "startLine": 74,
        "startChar": 20,
        "endLine": 74,
        "endChar": 35
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c0df48_594474a5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T15:37:45Z",
      "side": 1,
      "message": "Yes but that\u0027s just the string. Even java.net.URL#toURI() uses \"new URI(toString())\", where the toString() returns the string representation of the URL. I suggested the name change to highlight that canonicalWebUrl is a URI object and not a URL object. If you prefer to keep the current name, I won\u0027t mind.",
      "parentUuid": "dc6890d5_368a2961",
      "range": {
        "startLine": 74,
        "startChar": 20,
        "endLine": 74,
        "endChar": 35
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36122ac2_8040af8c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T16:19:44Z",
      "side": 1,
      "message": "I did a little homework, and there is a lot of confusion, but as I understand it: we only care about URLs (more specifically, HTTP URLs). To manipulate them, the JDK URI class is better code since it is newer. Since URL describes a more specific concept than URI, I think it is the better choice here.",
      "parentUuid": "a7c0df48_594474a5",
      "range": {
        "startLine": 74,
        "startChar": 20,
        "endLine": 74,
        "endChar": 35
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2369492_b48bb0c9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T14:20:12Z",
      "side": 1,
      "message": "srcRepoUri",
      "range": {
        "startLine": 121,
        "startChar": 8,
        "endLine": 121,
        "endChar": 18
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d117fcc9_c280f8b0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T15:06:58Z",
      "side": 1,
      "message": "see above.",
      "parentUuid": "c2369492_b48bb0c9",
      "range": {
        "startLine": 121,
        "startChar": 8,
        "endLine": 121,
        "endChar": 18
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92e897be_4e6da676",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T14:20:12Z",
      "side": 1,
      "message": "optional + unrelated: Is there a reason why this method isn\u0027t a constructor of ConfigEntry? A constructor would have many advantages.",
      "range": {
        "startLine": 189,
        "startChar": 34,
        "endLine": 189,
        "endChar": 48
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4c1096b_535a8dd1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T15:06:58Z",
      "side": 1,
      "message": "the configuration class is pure data; it doesn\u0027t do the ctor/getter/setter dance to avoid boilerplate.",
      "parentUuid": "92e897be_4e6da676",
      "range": {
        "startLine": 189,
        "startChar": 34,
        "endLine": 189,
        "endChar": 48
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b027fae_3e8ff06c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T15:37:45Z",
      "side": 1,
      "message": "Okay. Thanks for explaining. I think the standard way in Java would be to have the constructor and the getters to ensure immutability.",
      "parentUuid": "c4c1096b_535a8dd1",
      "range": {
        "startLine": 189,
        "startChar": 34,
        "endLine": 189,
        "endChar": 48
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "104a8715_2301a6bd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T16:19:44Z",
      "side": 1,
      "message": "The config entry is not an exported API, so within the context of the \nSuperManifestRefUpdatedListener I am not concerned with abuse.\n\nThe whole ctors/getters etc. style makes for very voluminous code full of boilerplate, which I dislike.",
      "parentUuid": "7b027fae_3e8ff06c",
      "range": {
        "startLine": 189,
        "startChar": 34,
        "endLine": 189,
        "endChar": 48
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6dd8e6e_9373d4c4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T14:20:12Z",
      "side": 1,
      "message": "Why isn\u0027t this part of newConfigEntry(..)?",
      "range": {
        "startLine": 205,
        "startChar": 8,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abba962f_a53f6fbc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T15:06:58Z",
      "side": 1,
      "message": "because newConfigEntry is static, so it has no access to the canonicalWebUrl.",
      "parentUuid": "e6dd8e6e_9373d4c4",
      "range": {
        "startLine": 205,
        "startChar": 8,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32ce3d4f_a5635e9b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T15:37:45Z",
      "side": 1,
      "message": "Can\u0027t you pass it in or remove the static modifier? Having all code which puts data into a ConfigEntry within one method would be advantageous.",
      "parentUuid": "abba962f_a53f6fbc",
      "range": {
        "startLine": 205,
        "startChar": 8,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6cc8ea8_8d7d26d9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestRefUpdatedListener.java",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T16:19:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32ce3d4f_a5635e9b",
      "range": {
        "startLine": 205,
        "startChar": 8,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82997ad9_cb98e4ff",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T14:20:12Z",
      "side": 1,
      "message": "Using\n\n \"platform\"\n\nwould be much more obvious.",
      "range": {
        "startLine": 305,
        "startChar": 20,
        "endLine": 305,
        "endChar": 55
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cb0517e_9aac8793",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T14:20:12Z",
      "side": 1,
      "message": "optional: This variable as well as the method parameter of setupTestRepos(..) are both called \u0027prefix\u0027. It\u0027s a bit misleading as they refer to different things.",
      "range": {
        "startLine": 305,
        "startChar": 11,
        "endLine": 305,
        "endChar": 17
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8eac5064_fe1f6934",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T15:30:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cb0517e_9aac8793",
      "range": {
        "startLine": 305,
        "startChar": 11,
        "endLine": 305,
        "endChar": 17
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f286752_55f6a071",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T15:30:48Z",
      "side": 1,
      "message": "yes, but it would be wrong. The test name gets worked into the prefix.",
      "parentUuid": "82997ad9_cb98e4ff",
      "range": {
        "startLine": 305,
        "startChar": 20,
        "endLine": 305,
        "endChar": 55
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41ada684_11d7a8b0",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T15:37:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2f286752_55f6a071",
      "range": {
        "startLine": 305,
        "startChar": 20,
        "endLine": 305,
        "endChar": 55
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcec4d8e_2946db4c",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2017-02-15T14:20:12Z",
      "side": 1,
      "message": "Please pass a charset to this method.",
      "range": {
        "startLine": 347,
        "startChar": 72,
        "endLine": 347,
        "endChar": 82
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8930eaf4_a29721a2",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/supermanifest/SuperManifestIT.java",
        "patchSetId": 2
      },
      "lineNbr": 347,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2017-02-15T15:30:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcec4d8e_2946db4c",
      "range": {
        "startLine": 347,
        "startChar": 72,
        "endLine": 347,
        "endChar": 82
      },
      "revId": "88ffcbe2b0c4ab1113728a909b3dc1ae544b0df8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}